class Node:
    def __init__(self, data):
        self.data = data
        self.left = None
        self.right = None

def is_bst(node, min_val, max_val):
    # Base case: If node is None, it's valid
    if node is None:
        return True
    
    # If the node's value is outside the allowed range, it's not a BST
    if node.data <= min_val or node.data >= max_val:
        return False
    
    # Check the left subtree with updated max value
    # Check the right subtree with updated min value
    return is_bst(node.left, min_val, node.data) and is_bst(node.right, node.data, max_val)

def check_binary_search_tree_(root):
    # Call the helper function with initial range (-infinity, +infinity)
    return is_bst(root, float('-inf'), float('inf'))
